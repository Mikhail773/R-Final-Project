install.packages("tidyverse")
library(tidyverse)
install.packages(c("nycflights13", "gapminder", "Lahman"))
library(gapminder)
library(Lahman)
library(nycflights13)
mydata <- read.csv("C:\\Users\\vener\\OneDrive\\Documents\\University at Brockport\\Class Content\\2021 - Spring\\Data Analysis and Predictive Modeling\\Labs\\Lab03\\Lab03\\Lab4_ZipCard_Data.csv")
View(mydata)
View(mydata)
unknowngender <- subset( mydata, GENDER==Unknown)
unknowngender <- subset( mydata, GENDER=="Unknown")
malefemale <- (mydata - unkowngender)
malefemale <- (mydata - unknowngender)
View(unknowngender)
malefemale <- subset( mydata, GENDER!="Unknown")
average(malefemale, TRANSACTION_AMOUNT, GENDER="Male")
library(tidyverse)
average(malefemale, TRANSACTION_AMOUNT, GENDER="Male")
library(dplyr)
average(malefemale, TRANSACTION_AMOUNT, GENDER="Male")
mean(malefemale, TRANSACTION_AMOUNT, GENDER="Male")
mean(malefemale, malefemale$TRANSACTION_AMOUNT, GENDER="Male")
mean(malefemale, malefemale$TRANSACTION_AMOUNT, malefemale$GENDER="Male")
mean(malefemale, malefemale$TRANSACTION_AMOUNT, malefemale$GENDER=="Male")
mean(malefemale, TRANSACTION_AMOUNT, GENDER=="Male")
mean(TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male")
)
mean(TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male"))
mean($TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male"))
mean(TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male"))
mean(TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male"))
average
mean(malefemale$TRANSACTION_AMOUNT, subset(malefemale, GENDER=="Male"))
mean(malefemale$TRANSACTION_AMOUNT)
mean(subset(malefemale$TRANSACTION_AMOUNT, GENDER=="male")
)
mean(subset(malefemale$TRANSACTION_AMOUNT, malefemale$GENDER=="male")
)
mean(subset(malefemale$TRANSACTION_AMOUNT, malefemale$GENDER=="male"))
mean(subset(malefemale$TRANSACTION_AMOUNT, malefemale$GENDER=="male"))
mean(subset(malefemale$$GENDER=="male")$TRANSACTION_AMOUNT)
mean(subset(malefemale$GENDER=="male")$TRANSACTION_AMOUNT)
mean(subset(malefemale, malefemale$GENDER=="male")$TRANSACTION_AMOUNT)
subset(malefemale, malefemale$GENDER=="male")$TRANSACTION_AMOUNT
sum(malefemale, malefemale$GENDER=="male")$TRANSACTION_AMOUNT
subset(malefemale, malefemale$GENDER=="male")$TRANSACTION_AMOUNT
subset(malefemale, malefemale$GENDER=="male")
subset(malefemale, malefemale$GENDER=="Male")$TRANSACTION_AMOUNT
mean(subset(malefemale$$GENDER=="Male")$TRANSACTION_AMOUNT)
mean(subset(malefemale$GENDER=="Male")$TRANSACTION_AMOUNT)
mean(subset(malefemale, malefemale$GENDER=="Male")$TRANSACTION_AMOUNT)
mean(subset(malefemale, malefemale$GENDER=="Female")$TRANSACTION_AMOUNT)
d <- with (malefemale, TRANSACTION_AMOUNT[GENDER=="Male"] - TRANSACTION_AMOUNT[GENDER=="Female"])
d <- with (malefemale, TRANSACTION_AMOUNT[GENDER=="Female"] - TRANSACTION_AMOUNT[GENDER=="Male"])
d <- with (malefemale, TRANSACTION_AMOUNT[GENDER=="Male"] - TRANSACTION_AMOUNT[GENDER=="Female"])
shapiro.text(d)
shapiro.test(d)
res <- t.test(TRANSACTION_AMOUNT ~ GENDER, data = malefemale, var.equal = TRUE)
res
View(malefemale)
View(malefemale)
View(malefemale)
SUNYBrockport <- subset(malefemale, ACAD_ORG=="SUNY at Brockport")
subset(malefemale, ACAD_ORG=="SUNY*")
subset(malefemale, ACAD_ORG==SUNY*)
ColBusAdm <- subset(malefemale, ACAD_ORG=="College of Business Administration")
ColEd <- subset(malefemale, ACAD_ORG=="College of Education")
ColEng <- subset(malefemale, ACAD_ORG=="College of Engineering")
ColHlthProf <- subset(malefemale, ACAD_ORG=="College of Health Professions")
#Load the libraries needed for the project
library(dplyr)
library(tidyverse)
mydata <- read.csv("C:\\Users\\vener\\OneDrive\\Documents\\University at Brockport\\Class Content\\2021 - Spring\\Data Analysis and Predictive Modeling\\Labs\\Lab03\\Lab03\\Lab4_ZipCard_Data.csv")
malefemale <- subset(mydata, mydata$GENDER != "Unknown")
mean(subset(malefemale, malefemale$GENDER=="Male")$TRANSACTION_AMOUNT)
mean(subset(malefemale, malefemale$GENDER=="Female")$TRANSACTION_AMOUNT)
res <- t.test(TRANSACTION_AMOUNT ~ GENDER, data = malefemale, var.equal = TRUE)
res
#SUNY at Brockport (4628)
ColSuny <- subset(malefemale, ACAD_ORG=="SUNY at Brockport")
#College of Business Administration (1959)
ColBusAdm <- subset(malefemale, ACAD_ORG=="College of Business Administration")
#College of Education (2091)
ColEd <- subset(malefemale, ACAD_ORG=="College of Education")
#College of Engineering (1858)
ColEng <- subset(malefemale, ACAD_ORG=="College of Engineering")
#College of Health Professions (1758)
ColHlthProf <- subset(malefemale, ACAD_ORG=="College of Health Professions")
#HEALTH PROFESSIONS
#Variables that hold the male and female true and false values
totalMsum <- (ColHlthProf$GENDER == "Male")
totalFeSum <- (ColHlthProf$GENDER == "Female")
#variables that hold the total number of times male and female occurs
totalMsumCount <- sum(totalMsum)
totalFesumCount <- sum(totalFeSum)
#making a table with the number of Males, Females, and total
ColHlthTB <- rbind(Male = as.numeric(c(totalMsumCount)),
Female = as.numeric(c(totalFesumCount)),
Total =as.numeric( c(sum(totalMsum, totalFeSum))))
#Running chisquare test with our table as an input
chisq.test(ColHlthTB)
#SUNY AT BROCKPORT
#Variables that hold the male and female true and false values
totalMsum <- (ColSuny$GENDER == "Male")
totalFeSum <- (ColSuny$GENDER == "Female")
#variables that hold the total number of times male and female occurs
totalMsumCount <- sum(totalMsum)
totalFesumCount <- sum(totalFeSum)
#making a table with the number of Males, Females, and total
ColSunyTB <- rbind(Male = as.numeric(c(totalMsumCount)),
Female = as.numeric(c(totalFesumCount)),
Total =as.numeric( c(sum(totalMsum, totalFeSum))))
#Running chisquare test with our table as an input
chisq.test(ColSunyTB)
#BUSINESS ADMINISTRATION
#Variables that hold the male and female true and false values
totalMsum <- (ColBusAdm$GENDER == "Male")
totalFeSum <- (ColBusAdm$GENDER == "Female")
#variables that hold the total number of times male and female occurs
totalMsumCount <- sum(totalMsum)
totalFesumCount <- sum(totalFeSum)
#making a table with the number of Males, Females, and total
ColSunyTB <- rbind(Male = as.numeric(c(totalMsumCount)),
Female = as.numeric(c(totalFesumCount)),
Total =as.numeric( c(sum(totalMsum, totalFeSum))))
#Running chisquare test with our table as an input
chisq.test(ColSunyTB)
#EDUCATION
#Variables that hold the male and female true and false values
totalMsum <- (ColEd$GENDER == "Male")
totalFeSum <- (ColEd$GENDER == "Female")
#variables that hold the total number of times male and female occurs
totalMsumCount <- sum(totalMsum)
totalFesumCount <- sum(totalFeSum)
#making a table with the number of Males, Females, and total
ColSunyTB <- rbind(Male = as.numeric(c(totalMsumCount)),
Female = as.numeric(c(totalFesumCount)),
Total =as.numeric( c(sum(totalMsum, totalFeSum))))
#Running chisquare test with our table as an input
chisq.test(ColSunyTB)
#ENGINEERING
#Variables that hold the male and female true and false values
totalMsum <- (ColEng$GENDER == "Male")
totalFeSum <- (ColEng$GENDER == "Female")
#variables that hold the total number of times male and female occurs
totalMsumCount <- sum(totalMsum)
totalFesumCount <- sum(totalFeSum)
#making a table with the number of Males, Females, and total
ColSunyTB <- rbind(Male = as.numeric(c(totalMsumCount)),
Female = as.numeric(c(totalFesumCount)),
Total =as.numeric( c(sum(totalMsum, totalFeSum))))
#Running chisquare test with our table as an input
chisq.test(ColSunyTB)
#Getting subsets of malefemale, and storing the acadlevel in different variables
ColFresh <- subset(malefemale, ACAD_LEVEL=="Feshmen")
ColSoph <- subset(malefemale, ACAD_LEVEL=="Sophomore")
ColJun <- subset(malefemale, ACAD_LEVEL=="Junior")
ColSen <- subset(malefemale, ACAD_LEVEL=="Senior")
View(ColSoph)
ACAD_LEVEL.aov < -(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <-(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <-(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <- (TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <- (TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <- (TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov <- aov(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=malefemale)
ACAD_LEVEL.aov
TukeyHSD(ACAD_LEVEL.aov)
View(ColSen)
ColFreshSophJunSen <- subset(malefemale, ACAD_LEVEL =="Freshmen"|"sophmore"|"Junior"|"Senior")
ColFreshSophJunSen <- subset(malefemale, ACAD_LEVEL =="Freshmen"|ACAD_LEVEL =="Sophmore"|ACAD_LEVEL =="Junior"|ACAD_LEVEL =="Senior")
View(ColFreshSophJunSen)
ColFreshSophJunSen <- subset(malefemale, ACAD_LEVEL =="Freshmen"|ACAD_LEVEL =="Sophmore"|ACAD_LEVEL =="Junior"|ACAD_LEVEL =="Senior")
#Compute one-way anova of Transaction amount by Acad level
ACAD_LEVEL.aov <- aov(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=ColFreshSophJunSen)
#Display results of AOV
ACAD_LEVEL.aov
#Perform Tukey Analysis
TukeyHSD(ACAD_LEVEL.aov)
View(ColFreshSophJunSen)
View(malefemale)
#Getting subsets of malefemale, Where Avad level is Freshman, Sophomore, Junior, or Senior
ColFreshSophJunSen <- subset(malefemale, ACAD_LEVEL =="Freshman"|ACAD_LEVEL =="Sophomore"|ACAD_LEVEL =="Junior"|ACAD_LEVEL =="Senior")
#Compute one-way anova of Transaction amount by Acad level
ACAD_LEVEL.aov <- aov(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=ColFreshSophJunSen)
#Display results of AOV
ACAD_LEVEL.aov
#Perform Tukey Analysis
TukeyHSD(ACAD_LEVEL.aov)
#Display results of AOV
ACAD_LEVEL.aov
#Display results of AOV
summary(ACAD_LEVEL.aov)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(ACAD_LOAD ~ GENDER + AGE ~ GENDER, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(ACAD_LOAD ~ GENDER + AGE ~ GENDER, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(ACAD_LOAD + AGE ~ GENDER, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(ACAD_LOAD ~ GENDER + AGE, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(GENDER ~ ACAD_LEVEL + AGE, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(ACAD_LOAD + AGE ~ GENDER, data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(GENDER ~ ACAD_LOAD + AGE , data=malefemale)
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(AGE ~ ACAD_LOAD + GENDER , data=malefemale)
summary(ACAD_LOAD.aov2)
#Perform Tukey Analysis
summary(ACAD_LOAD.aov2)
#Perform Tukey Analysis
TUKEY(ACAD_LOAD.aov2)
#Perform Tukey Analysis
TUKEYHSD(ACAD_LOAD.aov2)
#Perform Tukey Analysis
TukeyHSD(ACAD_LOAD.aov2)
#Getting subsets of malefemale, Where Acad level is Freshman, Sophomore, Junior, or Senior
ColFreshSophJunSen <- subset(malefemale, ACAD_LEVEL =="Freshman"|ACAD_LEVEL =="Sophomore"|ACAD_LEVEL =="Junior"|ACAD_LEVEL =="Senior")
#Compute one-way anova of Transaction amount by Acad level
ACAD_LEVEL.aov <- aov(TRANSACTION_AMOUNT ~ ACAD_LEVEL, data=ColFreshSophJunSen)
#Display results of AOV
summary(ACAD_LEVEL.aov)
#Perform Tukey Analysis
TukeyHSD(ACAD_LEVEL.aov)
#Getting subsets of malefemale, Where Acad load is Enrolled Full-Time, Three Quarter Time, Enrolled Half-Time
ColACADLOAD <- subset(malefemale, ACAD_LOAD =="Enrolled Full-Time"|ACAD_LOAD =="Three Quarter Time"|ACAD_LOAD =="Enrolled Half-Time")
#Computer two-way avova of Acad Load and and Age by Gender
ACAD_LOAD.aov2 <- aov(AGE ~ ACAD_LOAD + GENDER , data=ColACADLOAD)
summary(ACAD_LOAD.aov2)
#Perform Tukey Analysis
TukeyHSD(ACAD_LOAD.aov2)
#Computer two-way avova of Acad Load and Age on Gender
ACAD_LOAD.aov2 <- aov(GENDER ~ ACAD_LOAD + AGE , data=ColACADLOAD)
#Computer two-way avova of Acad Load and Age on Gender
ACAD_LOAD.aov2 <- aov(AGE ~ GENDER + ACAD_LOAD, data=ColACADLOAD)
summary(ACAD_LOAD.aov2)
#Perform Tukey Analysis
TukeyHSD(ACAD_LOAD.aov2)
# Clear plots
dev.off()
# Clear environment
rm(list = ls())
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear console
cat("\014")
setwd("~/University at Brockport/Class Content/2021 - Spring/Data Analysis and Predictive Modeling/Project/Git")
#Import all the library's we are using
library(tidyverse)
library(hexbin)
library(e1071) #SVM
library(car) #predict
library(caret) #partiiton
library(MASS) #stepwise
library(kernlab) #SVM
library(rpart) # Decision Tree Regression
library(randomForest) #  Random Forest Tree Regression
library(ranger) # RFT more than 53 factors
#Read our dataset into the cars variable
cars <- read_csv("cars.csv")
View(cars) #view the data
#Removing unnecessary columns from cars. Store that data in cars_edited
# -(19) is a column that shows the number of times a car has been upped. This column not descriptive and has been removed
# -(20:29) are boolean columns for various features. There is no description of what these features are and for that reason they have been omitted.
cars_edited <- cars %>% dplyr::select(-8 & -(12:13) & -(20:29))
View(cars_edited) #view the data
# Recode engine_fuel to clear up confusion between compressed gas and gasoline
cars_edited <- cars_edited %>% mutate(engine_fuel = dplyr::recode(engine_fuel,'gas' = "compressed natural gas"))
# Check the na's in the dataset
colSums(is.na(cars))
# Lets arbitrarily pick -1 to denote NA. (Engine-Capacity is categorical so this can be done)
cars_edited <- cars_edited %>% mutate(engine_capacity = coalesce(engine_capacity, -1))
# Check for Duplicates and remove them
which(duplicated(cars_edited))
cars_edited <- cars_edited %>% distinct()
# View the changes the mutate made
View(cars_edited)
###################################################################################################
#
# Split Dataset into Training and Testing for our Models
#
set.seed(123)
training.samples <- cars_edited$manufacturer_name %>% createDataPartition(p = 0.8, list = FALSE)
train.data <- cars_edited[training.samples,]
test.data <- cars_edited[-training.samples,]
